INSERT INTO Authors (name, nationality, birth_date) VALUES
('George Orwell', 'British', '1903-06-25'),
('Jane Austen', 'British', '1775-12-16'),
('Mark Twain', 'American', '1835-11-30'),
('J.K. Rowling', 'British', '1965-07-31'),
('Harper Lee', 'American', '1926-04-28'),
('F. Scott Fitzgerald', 'American', '1896-09-24'),
('Leo Tolstoy', 'Russian', '1828-09-09'),
('Virginia Woolf', 'British', '1882-01-25'),
('Ernest Hemingway', 'American', '1899-07-21'),
('Gabriel Garcia Marquez', 'Colombian', '1927-03-06'),
('Toni Morrison', 'American', '1931-02-18'),
('George R.R. Martin', 'American', '1948-09-20'),
('J.R.R. Tolkien', 'British', '1892-01-03'),
('Agatha Christie', 'British', '1890-09-15'),
('Stephen King', 'American', '1947-09-21'),
('Margaret Atwood', 'Canadian', '1939-11-18'),
('Kazuo Ishiguro', 'British', '1954-11-08'),
('Chimamanda Ngozi Adichie', 'Nigerian', '1977-09-15'),
('Yuval Noah Harari', 'Israeli', '1976-02-24'),
('Malcolm Gladwell', 'Canadian', '1963-09-03');


INSERT INTO Books (title, author_id, genre, publication_year, available_copies) VALUES
('1984', 1, 'Dystopian', 1949, 5),
('Pride and Prejudice', 2, 'Romance', 1813, 3),
('The Adventures of Tom Sawyer', 3, 'Adventure', 1876, 4),
('Harry Potter and the Philosopher''s Stone', 4, 'Fantasy', 1997, 10),
('To Kill a Mockingbird', 5, 'Classic', 1960, 7),
('The Great Gatsby', 6, 'Classic', 1925, 6),
('War and Peace', 7, 'Historical', 1869, 2),
('Mrs. Dalloway', 8, 'Modernist', 1925, 3),
('The Old Man and the Sea', 9, 'Literary Fiction', 1952, 4),
('One Hundred Years of Solitude', 10, 'Magical Realism', 1967, 5),
('Beloved', 11, 'Historical Fiction', 1987, 3),
('A Game of Thrones', 12, 'Fantasy', 1996, 8),
('The Hobbit', 13, 'Fantasy', 1937, 6),
('Murder on the Orient Express', 14, 'Mystery', 1934, 4),
('The Shining', 15, 'Horror', 1977, 5),
('The Handmaid''s Tale', 16, 'Dystopian', 1985, 6),
('Never Let Me Go', 17, 'Science Fiction', 2005, 3),
('Half of a Yellow Sun', 18, 'Historical Fiction', 2006, 4),
('Sapiens: A Brief History of Humankind', 19, 'Non-Fiction', 2011, 7),
('Outliers: The Story of Success', 20, 'Non-Fiction', 2008, 5),
('Animal Farm', 1, 'Dystopian', 1945, 4),
('Sense and Sensibility', 2, 'Romance', 1811, 3),
('The Adventures of Huckleberry Finn', 3, 'Adventure', 1884, 5),
('Harry Potter and the Chamber of Secrets', 4, 'Fantasy', 1998, 8),
('Go Set a Watchman', 5, 'Classic', 2015, 2),
('Tender Is the Night', 6, 'Classic', 1934, 3),
('Anna Karenina', 7, 'Historical', 1877, 4),
('To the Lighthouse', 8, 'Modernist', 1927, 3),
('For Whom the Bell Tolls', 9, 'Literary Fiction', 1940, 5),
('Love in the Time of Cholera', 10, 'Magical Realism', 1985, 4),
('Song of Solomon', 11, 'Historical Fiction', 1977, 3),
('A Clash of Kings', 12, 'Fantasy', 1998, 7),
('The Lord of the Rings', 13, 'Fantasy', 1954, 6),
('Death on the Nile', 14, 'Mystery', 1937, 4),
('It', 15, 'Horror', 1986, 5),
('Oryx and Crake', 16, 'Dystopian', 2003, 4),
('The Remains of the Day', 17, 'Historical Fiction', 1989, 3),
('Americanah', 18, 'Contemporary', 2013, 5),
('Homo Deus: A Brief History of Tomorrow', 19, 'Non-Fiction', 2015, 6),
('Blink: The Power of Thinking Without Thinking', 20, 'Non-Fiction', 2005, 4);


INSERT INTO Members (first_name, last_name, email, phone_number) VALUES
('Alice', 'Smith', 'alice.smith@example.com', '123-456-7890'),
('Bob', 'Johnson', 'bob.johnson@example.com', '987-654-3210'),
('Charlie', 'Brown', 'charlie.brown@example.com', '555-555-5555'),
('David', 'Williams', 'david.williams@example.com', '444-444-4444'),
('Eve', 'Jones', 'eve.jones@example.com', '333-333-3333'),
('Frank', 'Garcia', 'frank.garcia@example.com', '222-222-2222'),
('Grace', 'Martinez', 'grace.martinez@example.com', '111-111-1111'),
('Hank', 'Davis', 'hank.davis@example.com', '999-999-9999'),
('Ivy', 'Rodriguez', 'ivy.rodriguez@example.com', '888-888-8888'),
('Jack', 'Miller', 'jack.miller@example.com', '777-777-7777'),
('Karen', 'Wilson', 'karen.wilson@example.com', '666-666-6666'),
('Liam', 'Moore', 'liam.moore@example.com', '555-555-5555'),
('Mia', 'Taylor', 'mia.taylor@example.com', '444-444-4444'),
('Noah', 'Anderson', 'noah.anderson@example.com', '333-333-3333'),
('Olivia', 'Thomas', 'olivia.thomas@example.com', '222-222-2222'),
('Pam', 'Jackson', 'pam.jackson@example.com', '111-111-1111'),
('Quinn', 'White', 'quinn.white@example.com', '999-999-9999'),
('Ryan', 'Harris', 'ryan.harris@example.com', '888-888-8888'),
('Sara', 'Martin', 'sara.martin@example.com', '777-777-7777'),
('Tom', 'Thompson', 'tom.thompson@example.com', '666-666-6666'),
('Uma', 'Garcia', 'uma.garcia@example.com', '555-555-5555'),
('Victor', 'Martinez', 'victor.martinez@example.com', '444-444-4444'),
('Wendy', 'Robinson', 'wendy.robinson@example.com', '333-333-3333'),
('Xander', 'Clark', 'xander.clark@example.com', '222-222-2222'),
('Yara', 'Rodriguez', 'yara.rodriguez@example.com', '111-111-1111'),
('Zack', 'Lewis', 'zack.lewis@example.com', '999-999-9999'),
('Amy', 'Lee', 'amy.lee@example.com', '888-888-8888'),
('Ben', 'Walker', 'ben.walker@example.com', '777-777-7777'),
('Cara', 'Hall', 'cara.hall@example.com', '666-666-6666'),
('Derek', 'Allen', 'derek.allen@example.com', '555-555-5555'),
('Ella', 'Young', 'ella.young@example.com', '444-444-4444'),
('Finn', 'Hernandez', 'finn.hernandez@example.com', '333-333-3333'),
('Gina', 'King', 'gina.king@example.com', '222-222-2222'),
('Hank', 'Wright', 'hank.wright@example.com', '111-111-1111'),
('Ivy', 'Lopez', 'ivy.lopez@example.com', '999-999-9999'),
('Jack', 'Hill', 'jack.hill@example.com', '888-888-8888'),
('Kara', 'Scott', 'kara.scott@example.com', '777-777-7777'),
('Liam', 'Green', 'liam.green@example.com', '666-666-6666'),
('Mia', 'Adams', 'mia.adams@example.com', '555-555-5555'),
('Noah', 'Baker', 'noah.baker@example.com', '444-444-4444'),
('Olivia', 'Gonzalez', 'olivia.gonzalez@example.com', '333-333-3333'),
('Pam', 'Nelson', 'pam.nelson@example.com', '222-222-2222'),
('Quinn', 'Carter', 'quinn.carter@example.com', '111-111-1111'),
('Ryan', 'Mitchell', 'ryan.mitchell@example.com', '999-999-9999'),
('Sara', 'Perez', 'sara.perez@example.com', '888-888-8888'),
('Tom', 'Roberts', 'tom.roberts@example.com', '777-777-7777'),
('Uma', 'Turner', 'uma.turner@example.com', '666-666-6666'),
('Victor', 'Phillips', 'victor.phillips@example.com', '555-555-5555'),
('Wendy', 'Campbell', 'wendy.campbell@example.com', '444-444-4444'),
('Xander', 'Parker', 'xander.parker@example.com', '333-333-3333'),
('Yara', 'Evans', 'yara.evans@example.com', '222-222-2222'),
('Zack', 'Edwards', 'zack.edwards@example.com', '111-111-1111'),
('Amy', 'Collins', 'amy.collins@example.com', '999-999-9999'),
('Ben', 'Stewart', 'ben.stewart@example.com', '888-888-8888'),
('Cara', 'Sanchez', 'cara.sanchez@example.com', '777-777-7777'),
('Derek', 'Morris', 'derek.morris@example.com', '666-666-6666'),
('Ella', 'Rogers', 'ella.rogers@example.com', '555-555-5555'),
('Finn', 'Reed', 'finn.reed@example.com', '444-444-4444'),
('Gina', 'Cook', 'gina.cook@example.com', '333-333-3333'),
('Hank', 'Morgan', 'hank.morgan@example.com', '222-222-2222'),
('Ivy', 'Bell', 'ivy.bell@example.com', '111-111-1111'),
('Jack', 'Murphy', 'jack.murphy@example.com', '999-999-9999'),
('Kara', 'Rivera', 'kara.rivera@example.com', '888-888-8888'),
('Liam', 'Cooper', 'liam.cooper@example.com', '777-777-7777'),
('Mia', 'Richardson', 'mia.richardson@example.com', '666-666-6666'),
('Noah', 'Cox', 'noah.cox@example.com', '555-555-5555'),
('Olivia', 'Howard', 'olivia.howard@example.com', '444-444-4444'),
('Pam', 'Ward', 'pam.ward@example.com', '333-333-3333'),
('Quinn', 'Torres', 'quinn.torres@example.com', '222-222-2222'),
('Ryan', 'Peterson', 'ryan.peterson@example.com', '111-111-1111'),
('Sara', 'Gray', 'sara.gray@example.com', '999-999-9999'),
('Tom', 'Ramirez', 'tom.ramirez@example.com', '888-888-8888'),
('Uma', 'James', 'uma.james@example.com', '777-777-7777'),
('Victor', 'Watson', 'victor.watson@example.com', '666-666-6666'),
('Wendy', 'Brooks', 'wendy.brooks@example.com', '555-555-5555'),
('Xander', 'Kelly', 'xander.kelly@example.com', '444-444-4444'),
('Yara', 'Sanders', 'yara.sanders@example.com', '333-333-3333'),
('Zack', 'Price', 'zack.price@example.com', '222-222-2222'),
('Amy', 'Bennett', 'amy.bennett@example.com', '111-111-1111'),
('Ben', 'Wood', 'ben.wood@example.com', '999-999-9999'),
('Cara', 'Barnes', 'cara.barnes@example.com', '888-888-8888'),
('Derek', 'Ross', 'derek.ross@example.com', '777-777-7777'),
('Ella', 'Henderson', 'ella.henderson@example.com', '666-666-6666'),
('Finn', 'Coleman', 'finn.coleman@example.com', '555-555-5555'),
('Gina', 'Jenkins', 'gina.jenkins@example.com', '444-444-4444'),
('Hank', 'Perry', 'hank.perry@example.com', '333-333-3333'),
('Ivy', 'Powell', 'ivy.powell@example.com', '222-222-2222'),
('Jack', 'Long', 'jack.long@example.com', '111-111-1111'),
('Kara', 'Patterson', 'kara.patterson@example.com', '999-999-9999'),
('Liam', 'Hughes', 'liam.hughes@example.com', '888-888-8888'),
('Mia', 'Flores', 'mia.flores@example.com', '777-777-7777'),
('Noah', 'Washington', 'noah.washington@example.com', '666-666-6666'),
('Olivia', 'Butler', 'olivia.butler@example.com', '555-555-5555'),
('Pam', 'Simmons', 'pam.simmons@example.com', '444-444-4444'),
('Quinn', 'Foster', 'quinn.foster@example.com', '333-333-3333'),
('Ryan', 'Gonzales', 'ryan.gonzales@example.com', '222-222-2222'),
('Sara', 'Bryant', 'sara.bryant@example.com', '111-111-1111'),
('Tom', 'Alexander', 'tom.alexander@example.com', '999-999-9999'),
('Uma', 'Russell', 'uma.russell@example.com', '888-888-8888'),
('Victor', 'Griffin', 'victor.griffin@example.com', '777-777-7777'),
('Wendy', 'Diaz', 'wendy.diaz@example.com', '666-666-6666'),
('Xander', 'Hayes', 'xander.hayes@example.com', '555-555-5555'),
('Yara', 'Myers', 'yara.myers@example.com', '444-444-4444'),
('Zack', 'Ford', 'zack.ford@example.com', '333-333-3333'),
('Amy', 'Hamilton', 'amy.hamilton@example.com', '222-222-2222'),
('Ben', 'Graham', 'ben.graham@example.com', '111-111-1111'),
('Cara', 'Sullivan', 'cara.sullivan@example.com', '999-999-9999'),
('Derek', 'Wallace', 'derek.wallace@example.com', '888-888-8888'),
('Ella', 'Woods', 'ella.woods@example.com', '777-777-7777'),
('Finn', 'Cole', 'finn.cole@example.com', '666-666-6666');



INSERT INTO Borrowings (member_id, book_id, borrow_date, return_date) VALUES
(1, 1, '2025-01-10', NULL),
(2, 2, '2025-01-15', '2025-01-25'),
(1, 3, '2025-01-20', NULL),
(2, 1, '2025-01-22', '2025-02-01'),
(1, 2, '2025-01-23', NULL),
(2, 3, '2025-01-24', '2025-02-05'),
(1, 1, '2025-02-01', NULL),
(2, 2, '2025-02-03', NULL),
(1, 3, '2025-02-05', '2025-02-15'),
(2, 1, '2025-02-07', NULL),
(1, 2, '2025-02-10', '2025-02-20'),
(2, 3, '2025-02-12', NULL),
(1, 1, '2025-02-14', NULL),
(2, 2, '2025-02-16', '2025-02-26'),
(1, 3, '2025-02-18', NULL),
(2, 1, '2025-02-20', '2025-03-01'),
(1, 2, '2025-02-22', NULL),
(2, 3, '2025-02-24', '2025-03-05'),
(1, 1, '2025-02-26', NULL),
(2, 2, '2025-02-28', NULL),
(1, 3, '2025-03-02', '2025-03-12'),
(2, 1, '2025-03-04', NULL),
(1, 2, '2025-03-06', '2025-03-16'),
(2, 3, '2025-03-08', NULL),
(1, 1, '2025-03-10', NULL),
(2, 2, '2025-03-12', '2025-03-22'),
(1, 3, '2025-03-14', NULL),
(2, 1, '2025-03-16', '2025-03-26'),
(1, 2, '2025-03-18', NULL),
(2, 3, '2025-03-20', '2025-03-30'),
(1, 1, '2025-03-22', NULL),
(2, 2, '2025-03-24', NULL),
(1, 3, '2025-03-26', '2025-04-05'),
(2, 1, '2025-03-28', NULL),
(1, 2, '2025-03-30', '2025-04-09'),
(2, 3, '2025-04-01', NULL),
(1, 1, '2025-04-03', NULL),
(2, 2, '2025-04-05', '2025-04-15'),
(1, 3, '2025-04-07', NULL);




Update the Number of Available Copies After a Borrowing:

UPDATE Books
SET available_copies = available_copies - 1
WHERE book_id = 1;

UPDATE Borrowings
SET return_date = CURRENT_DATE
WHERE borrowing_id = 1;

UPDATE Books
SET available_copies = available_copies + 1
WHERE book_id = 1;


Query the Database

Retrieve All Books Borrowed by a Specific Member:
SELECT m.first_name, m.last_name, b.title, br.borrow_date, br.return_date
FROM Borrowings br
JOIN Members m ON br.member_id = m.member_id
JOIN Books b ON br.book_id = b.book_id
WHERE m.member_id = 1;

List All Overdue Borrowings:
SELECT m.first_name, m.last_name, b.title, br.borrow_date, br.return_date
FROM Borrowings br
JOIN Members m ON br.member_id = m.member_id
JOIN Books b ON br.book_id = b.book_id
WHERE br.return_date IS NULL AND br.borrow_date < CURRENT_DATE 